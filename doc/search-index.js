var searchIndex = new Map(JSON.parse('[\
["spotify_party_api",{"doc":"","t":"CCCCHHCCFNNONNNNNNNNSSCCCCFFNNNNNNNNNNOONNNNNNNNNNOOOFFNNNNNNNNNNNNNNNNNNNNNNFNNFNNNNNNNNNNNNFFFFOONNNNNNNNNNNNNNNNNNNNONNNNOONNNNNNNNNNNNNNFFOONNNNNNNNNNFNOOOONNNNNNNFOOONNNNFFNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNOFFFFNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNOFOFFFNNNNNFNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNOHONNNNNNNNNCCFFFOOONNNNNNONNNONNNNNNNNNNNNNNNONNONNONONONNNNNNNONNNNNNNNNNNNFFONNNNNONONNNNNNONOONNNNNNNNNNNNNNCCCCCCCCCCCCHHHGPPPNNNHNNNNNHFNNNNNNNNONHNNNONHHFNNNNNNNHONNNNCCCCCCFFNNNNNNONNNNNNNNONNNNONNNNNNNNNNHHHHHFFFNNNNNNNNNNNNONNNONNNNNOOOOOONNNNNNNNNNONNNNNNNNNOOONNNFNNNNNOONNNNNNON","n":["application_data","constants","controllers","database_connection","dummy","main","models","utils","ApplicationData","borrow","borrow_mut","database_box","from","get_database","into","new","try_from","try_into","type_id","vzip","CLIENT_ID","CLIENT_SECRET","auth_controller","base_controller","party_controller","playback_controller","LoginData","SignupData","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deserialize","deserialize","email","email","from","from","from","from","from_base64","from_base64","into","into","into","into","name","password","password","post_login","post_signup","register","register","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","borrow","borrow","borrow_mut","borrow_mut","foo","from","from","hello","into","into","register","register","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AccessToken","CreatePartyData","JsonResponseForWithAccessToken","acceptIntoParty","access_token","access_token","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","code","default","deserialize","deserialize","deserialize","expires_in","expires_in","fmt","from","from","from","from","from","from","from","from","from","from","from_base64","from_base64","from_base64","getQueueToJoinParty","get_length_to_join_queue","grant_type","id","into","into","into","into","into","into","into","into","into","into","join_party","new","party_id","redirect_uri","redirected","refresh_token","register","register","register","register","register","register","register","request_token","result","scope","secret","serialize","serialize","sign_with_key","sign_with_key","start_party","start_party_two","to_base64","to_base64","token_type","token_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ContentType","ErrorSpotify","MainError","MainError2","PausePlaybackForm","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deserialize","deserialize","deserialize","deserialize","error","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_base64","from_base64","from_base64","from_base64","into","into","into","into","into","into","into","into","into","message","modify_volume","party_id","pause_playback","play_next","play_previous","register","register","register","register","register","resume_playback","serialize","serialize","serialize","serialize","sign_with_key","sign_with_key","sign_with_key","sign_with_key","status","to_base64","to_base64","to_base64","to_base64","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DB","add_client","borrow","borrow_mut","client","connect_to_db","database","from","get_client","get_database","into","new","try_from","try_into","type_id","vzip","party_model","user_model","Party","PartyAccessToken","PartyCollection","_id","access_token","access_token","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","collection","delete_party","deserialize","deserialize","expires_in","fmt","fmt","from","from","from","from_base64","from_base64","get_access_token","get_members_as_ref","get_requested_to_join_as_ref","insert_member","insert_requested_to_join","into","into","into","members","new","new","owner","query_by_id","query_by_owner","refresh_token","remove_user_from_queue","requested_to_join","save_party","scope","serialize","serialize","set_access_token_data","sign_with_key","sign_with_key","to_base64","to_base64","token_type","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","User","UserDocument","_id","add_owned_party","borrow","borrow","borrow_mut","borrow_mut","collection","deserialize","email","fmt","from","from","from_base64","into","into","name","new","owned_party","password","query_user_by_email","query_user_by_id","remove_owned_party","serialize","sign_with_key","to_base64","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","build_headers","check_login","check_party_exists_and_user_is_owner","collections_enum","convert_to_object_id","cookie_parser","get_cookie","refresh_token","requests_to_api","response","structs_to_serialize_deserialize","build_authorization_header","get_authorization_header","check_login","check_party_exists_and_user_is_owner_method","Collections","PARTIES","TESTING","USERS","borrow","borrow_mut","from","get_collection","into","try_from","try_into","type_id","vzip","convert_to_object_id","MyCookie","borrow","borrow_mut","fmt","from","get_key_as_ref","get_key_as_str","get_value_as_ref","into","key","new","parse_cookies","try_from","try_into","type_id","value","vzip","get_authorization_token_cookie","get_cookies_hash_map","RefreshToken","borrow","borrow_mut","default","deserialize","from","from_base64","into","refresh_token","refresh_token","try_from","try_into","type_id","vzip","errors_spotify","inital_check_for_users","post_request_empty","put_request_empty","refresh_post_empty_body","refresh_put_request_empty","ErrorSpotify","MainError","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize","error","fmt","fmt","from","from","from_base64","from_base64","into","into","message","serialize","serialize","sign_with_key","sign_with_key","status","to_base64","to_base64","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","intial_checkup","post_request_emtpy_body","put_request_emtpy_body","refresh_and_send_post_empty_body","refresh_and_send_empty_put_request","JsonResponse","JsonResponseForSigningUp","JsonResponseWithLengthOfQueue","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","get_redirected","get_result","get_url","id","into","into","into","length","new","new","new","redirect_to_login","redirect_to_login","redirected","redirected","redirected","result","result","result","serialize","serialize","serialize","sign_with_key","sign_with_key","sign_with_key","simple_response","to_base64","to_base64","to_base64","token","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","url","url","url","vzip","vzip","vzip","ResponseForQueueToJoinParty","borrow","borrow_mut","fmt","from","into","message","result","serialize","sign_with_key","to_base64","try_from","try_into","type_id","users","vzip"],"q":[[0,"spotify_party_api"],[8,"spotify_party_api::application_data"],[20,"spotify_party_api::constants"],[22,"spotify_party_api::controllers"],[26,"spotify_party_api::controllers::auth_controller"],[73,"spotify_party_api::controllers::base_controller"],[93,"spotify_party_api::controllers::party_controller"],[222,"spotify_party_api::controllers::playback_controller"],[336,"spotify_party_api::database_connection"],[352,"spotify_party_api::models"],[354,"spotify_party_api::models::party_model"],[417,"spotify_party_api::models::user_model"],[452,"spotify_party_api::utils"],[463,"spotify_party_api::utils::build_headers"],[464,"spotify_party_api::utils::build_headers::build_authorization_header"],[465,"spotify_party_api::utils::check_login"],[466,"spotify_party_api::utils::check_party_exists_and_user_is_owner"],[467,"spotify_party_api::utils::collections_enum"],[480,"spotify_party_api::utils::convert_to_object_id"],[481,"spotify_party_api::utils::cookie_parser"],[498,"spotify_party_api::utils::get_cookie"],[500,"spotify_party_api::utils::refresh_token"],[514,"spotify_party_api::utils::requests_to_api"],[520,"spotify_party_api::utils::requests_to_api::errors_spotify"],[553,"spotify_party_api::utils::requests_to_api::inital_check_for_users"],[554,"spotify_party_api::utils::requests_to_api::post_request_empty"],[555,"spotify_party_api::utils::requests_to_api::put_request_empty"],[556,"spotify_party_api::utils::requests_to_api::refresh_post_empty_body"],[557,"spotify_party_api::utils::requests_to_api::refresh_put_request_empty"],[558,"spotify_party_api::utils::response"],[615,"spotify_party_api::utils::structs_to_serialize_deserialize"],[631,"actix_web::response::responder"],[632,"std::io::error"],[633,"mongodb::db"],[634,"core::option"],[635,"alloc::boxed"],[636,"core::result"],[637,"core::any"],[638,"serde::de"],[639,"jwt::error"],[640,"core::convert"],[641,"core::marker"],[642,"actix_web::config"],[643,"core::fmt"],[644,"core::fmt"],[645,"serde::ser"],[646,"jwt::algorithm"],[647,"alloc::borrow"],[648,"mongodb::client"],[649,"core::error"],[650,"bson::oid"],[651,"alloc::vec"],[652,"actix_web::data"],[653,"mongodb::error"],[654,"actix_http::header::map"],[655,"actix_web::response::response"],[656,"std::collections::hash::map"],[657,"actix_web::request"],[658,"http::status"]],"d":["","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Controller to handle the logic of a user signing up","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Struct to deserialize the data of the spotify api, for the …","Struct to represent the data sent to create a party","","controller to accept a user into the party","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Controller to retrieve all the user that want to join a …","get the amount of people that want to join the party","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Controller to request to join a party","","","","","","","","","","","","","Controller to get the client id and the client secret and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Struct for deserializing Error From Spotify API","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Controller to modify the volume of the current playback","","Controller to pause the playback","","","","","","","","Controller to resume Playback","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents the Database client","Adds the client to the respective struct","","","The actual database client","Connects to the database","","Returns the argument unchanged.","Returns the Client as a reference in an Option ","Returns an Optional for the Database","Calls <code>U::from(self)</code>.","Constructor for the struct","","","","","","","Struct to represent a party","Struct to represent an access token","","","","","","","","","","","","Deletes a party from the database","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Retreives the access token from a Party struct","","Retunrs the array of the users that have requested to join …","inserts a memeber to the party asynchrounouslys","inserts an object id to the people that have requested to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Constructor to create a completely new party (without …","","Queries a document by id","Queries a Party Document given the owner","","Removes a user from the requested_to_join queue","","saves a party to the database","","","","Set a new access token and all its parts","","","","","","","","","","","","","","","","","","","","","Make the user the owner of a party","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Constructor to create a new user, with the respective …","","","","","Removes the owned party from a user","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the auth token from the cookie and creates the …","Checks if a user is logged in Returns true if the user is …","Checks if a given user owns a party","Contains all the collections for the database","","","","","","Returns the argument unchanged.","Returns the associated string with a given collection","Calls <code>U::from(self)</code>.","","","","","","Struct to Represent a Cookie","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","Parses all the cookies","","","","","","Retrives the authorization token, that was sent as a cookie","retrives the cookies hash map from the cookies http header","Struct to deserialize the Reponse from the refresh token","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Refreshes a token By Getting all the necessary data from …","","","","","","","","","","","","","Struct for deserializing Error From Spotify API","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Checks that the user making the request is the owner of …","Sends a post request to the api with the given …","","refreshes a token and sends a post request with empty body …","This function is responsible for refreshing the access …","Struct to Represent a simple respose from the api","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create a JSON response to redirect to login","","","","","","","","","","","","","","Creates a simple JSON response, where the result is true","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,11,19,13,21,11,19,13,21,11,13,11,13,11,19,13,21,11,13,11,19,13,21,13,11,13,0,0,19,21,11,19,13,21,11,19,13,21,11,19,13,21,11,19,13,21,22,23,22,23,0,22,23,0,22,23,22,23,22,23,22,23,22,23,22,23,0,0,0,0,24,26,31,32,25,24,26,33,34,35,36,37,31,32,25,24,26,33,34,35,36,37,25,24,25,24,26,24,26,24,31,32,25,24,26,33,34,35,36,37,25,24,26,0,0,25,25,31,32,25,24,26,33,34,35,36,37,0,26,26,25,26,24,31,32,33,34,35,36,37,0,26,24,25,25,26,25,26,0,0,25,26,24,26,31,32,25,24,26,33,34,35,36,37,31,32,25,24,26,33,34,35,36,37,31,32,25,24,26,33,34,35,36,37,26,31,32,25,24,26,33,34,35,36,37,45,0,0,0,0,42,43,44,45,46,47,48,49,50,42,43,44,45,46,47,48,49,50,42,43,44,45,44,43,44,45,42,43,44,45,46,47,48,49,50,42,43,44,45,42,43,44,45,46,47,48,49,50,43,0,42,0,0,0,46,47,48,49,50,0,42,43,44,45,42,43,44,45,43,42,43,44,45,42,43,44,45,46,47,48,49,50,42,43,44,45,46,47,48,49,50,42,43,44,45,46,47,48,49,50,42,43,44,45,46,47,48,49,50,0,7,7,7,7,0,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,56,56,57,53,56,57,53,56,57,53,53,56,57,57,56,57,53,56,57,56,57,56,56,56,53,53,53,56,57,56,53,56,56,53,53,57,53,56,53,57,56,57,53,56,57,56,57,57,53,56,57,53,56,57,53,56,57,53,56,57,0,0,63,62,62,63,62,63,62,63,63,63,62,63,63,62,63,63,62,63,63,62,62,62,63,63,63,62,63,62,63,62,63,62,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,67,67,67,67,67,0,67,67,67,67,67,0,0,68,68,68,68,68,68,68,68,68,68,0,68,68,68,68,68,0,0,0,70,70,70,70,70,70,70,0,70,70,70,70,70,0,0,0,0,0,0,0,0,72,73,72,73,72,73,73,72,73,72,73,72,73,72,73,72,72,73,72,73,72,72,73,72,73,72,73,72,73,72,73,0,0,0,0,0,0,0,0,29,75,77,29,75,77,29,75,77,29,29,29,75,29,75,77,77,29,75,77,29,75,29,75,77,29,75,77,29,75,77,29,75,77,29,29,75,77,75,29,75,77,29,75,77,29,75,77,29,75,77,29,75,77,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78],"f":"````{{}{{`{b}}}}{{}{{f{d}}}}```{ce{}{}}0`{cc{}}{h{{l{j}}}}2{{{A`{n}}}h}{c{{Ab{e}}}{}{}}0{cAd{}}5````````55555555{c{{Ab{Af}}}Ah}{c{{Ab{Aj}}}Ah}``6666{c{{Ab{eAl}}}{{Bb{{B`{An}}}}Bd}{}}08888`````{{BfBh}d}{{BjBh}d}666666665555::::::::`99`::{{BlBh}d}{{BnBh}d}888877<<``````<<<<<<<<<<<<<<<<<<<<`{{}C`}{c{{Ab{Cb}}}Ah}{c{{Ab{C`}}}Ah}{c{{Ab{Cd}}}Ah}``{{C`Cf}Ch}{cc{}}000000000:::````{ce{}{}}000000000`{{CjC`Cl}Cd}````{{CnBh}d}{{D`Bh}d}{{DbBh}d}{{DdBh}d}{{DfBh}d}{{DhBh}d}{{DjBh}d}````{{Cbc}AbDl}{{Cdc}AbDl}{{ce}{{Ab{ClAl}}}{}Dn}0``{c{{Ab{{Eb{E`}}Al}}}{}}0``{c{{Ab{e}}}{}{}}0000000000000000000{cAd{}}000000000`>>>>>>>>>>`````>>>>>>>>>>>>>>>>>>{c{{Ab{Ed}}}Ah}{c{{Ab{Ef}}}Ah}{c{{Ab{Eh}}}Ah}{c{{Ab{Ej}}}Ah}`{{EfCf}Ch}{{EhCf}Ch}{{EjCf}Ch}{cc{}}00000000{c{{Ab{eAl}}}{{Bb{{B`{An}}}}Bd}{}}000{ce{}{}}00000000``````{{ElBh}d}{{EnBh}d}{{F`Bh}d}{{FbBh}d}{{FdBh}d}`{{Edc}AbDl}{{Efc}AbDl}{{Ehc}AbDl}{{Ejc}AbDl}{{ce}{{Ab{ClAl}}}{}Dn}000`{c{{Ab{{Eb{E`}}Al}}}{}}000{c{{Ab{e}}}{}{}}00000000000000000{cAd{}}00000000=========`{{nFf}d}>>`{E`{{Ab{{A`{n}}{A`{Fh}}}}}}`{cc{}}{n{{l{Ff}}}}{n{{l{j}}}}{ce{}{}}{{}n}8871````````111111`{{FjFl}Fn}{c{{Ab{G`}}}Ah}{c{{Ab{Gb}}}Ah}`{{G`Cf}Ch}{{GbCf}Ch}999{c{{Ab{eAl}}}{{Bb{{B`{An}}}}Bd}{}}0{G`Cl}{G`{{Gd{Fl}}}}0{{FjFlFl}Fn}0:::`{{{l{{Gf{h}}}}}Fj}{{ClClClGhClCl}G`}`{{FjFl}{{Gj{{l{G`}}}}}}{{FjFl}{{l{G`}}}}`4`{{FjG`}Fl}`{{G`c}AbDl}{{Gbc}AbDl}{{FjFlGb}Fn}{{ce}{{Ab{ClAl}}}{}Dn}0{c{{Ab{{Eb{E`}}Al}}}{}}0`{c{{Ab{e}}}{}{}}00000{cAd{}}00{ce{}{}}00```{{GlFlFl}Fn}1111`{c{{Ab{Gn}}}Ah}`{{GnCf}Ch}{cc{}}0{c{{Ab{eAl}}}{{Bb{{B`{An}}}}Bd}{}}55`{{{l{{Gf{h}}}}}Gl}``{{GlE`}{{l{Gn}}}}{{GlFl}{{l{Gn}}}}{{GlFl}Fn}{{Gnc}AbDl}>=<<<<;;::````````````{{H`{l{Cl}}}{{Hb{FnCl}}}}{H`{{Hb{FnCl}}}}{{E`{l{{Gf{h}}}}}{{Hb{FnHd{l{Cl}}}}}}````==9{HfCl}>{c{{Ab{e}}}{}{}}0{cAd{}}{ce{}{}}{E`{{l{Fl}}}}`11{{HhCf}Ch}?{HhCl}{HhE`}14`{{ClCl}Hh}{E`{{Hj{ClHh}}}}887`6{H`{{l{Cl}}}}{H`{{l{{Hj{ClHh}}}}}}`88{{}Hl}{c{{Ab{Hl}}}Ah}{cc{}}{c{{Ab{eAl}}}{{Bb{{B`{An}}}}Bd}{}}<{HnFn}`??>=````````===={c{{Ab{I`}}}Ah}{c{{Ab{Ib}}}Ah}`{{I`Cf}Ch}{{IbCf}Ch}6655{ce{}{}}0`{{I`c}AbDl}{{Ibc}AbDl}{{ce}{{Ab{ClAl}}}{}Dn}0`{c{{Ab{{Eb{E`}}Al}}}{}}0{c{{Ab{e}}}{}{}}000{cAd{}}066{Hn{{Hb{Hd{l{Cl}}}}}}{{E`E`}{{Hb{FnId}}}}0{{HnE`E`}{{Hb{FnHd}}}}0```999999{cc{}}00{CjFn}0{CjCl}`<<<`{{FnFnCl}Cj}{{FnFnClClCl}If}{{FnFnClIh}Ij}{{}Cj}{{ClCl}If}``````{{Cjc}AbDl}{{Ifc}AbDl}{{Ijc}AbDl}{{ce}{{Ab{ClAl}}}{}Dn}005{c{{Ab{{Eb{E`}}Al}}}{}}00`{c{{Ab{e}}}{}{}}00000{cAd{}}00```{ce{}{}}00`00{{IlCf}Ch}{cc{}}2``{{Ilc}AbDl}76554`3","c":[],"p":[[10,"Responder",631],[1,"unit"],[8,"Result",632],[5,"ApplicationData",8],[5,"Database",633],[6,"Option",634],[5,"DB",336],[5,"Box",635],[6,"Result",636],[5,"TypeId",637],[5,"LoginData",26],[10,"Deserializer",638],[5,"SignupData",26],[6,"Error",639],[1,"u8"],[1,"slice"],[10,"AsRef",640],[10,"Sized",641],[5,"post_login",26],[5,"AppService",642],[5,"post_signup",26],[5,"hello",73],[5,"foo",73],[5,"AccessToken",93],[5,"CreatePartyData",93],[5,"JsonResponseForWithAccessToken",93],[5,"Formatter",643],[8,"Result",643],[5,"JsonResponse",558],[5,"String",644],[5,"start_party",93],[5,"start_party_two",93],[5,"request_token",93],[5,"join_party",93],[5,"get_length_to_join_queue",93],[5,"acceptIntoParty",93],[5,"getQueueToJoinParty",93],[10,"Serializer",645],[10,"SigningAlgorithm",646],[1,"str"],[6,"Cow",647],[5,"PausePlaybackForm",222],[5,"ErrorSpotify",222],[5,"MainError",222],[5,"MainError2",222],[5,"pause_playback",222],[5,"resume_playback",222],[5,"play_next",222],[5,"play_previous",222],[5,"modify_volume",222],[5,"Client",648],[10,"Error",649],[5,"PartyCollection",354],[5,"ObjectId",650],[1,"bool"],[5,"Party",354],[5,"PartyAccessToken",354],[5,"Vec",651],[5,"Data",652],[1,"i32"],[8,"Result",653],[5,"User",417],[5,"UserDocument",417],[5,"HeaderMap",654],[1,"tuple"],[5,"HttpResponse",655],[6,"Collections",467],[5,"MyCookie",481],[5,"HashMap",656],[5,"RefreshToken",500],[5,"HttpRequest",657],[5,"ErrorSpotify",520],[5,"MainError",520],[5,"StatusCode",658],[5,"JsonResponseForSigningUp",558],[1,"usize"],[5,"JsonResponseWithLengthOfQueue",558],[5,"ResponseForQueueToJoinParty",615]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
